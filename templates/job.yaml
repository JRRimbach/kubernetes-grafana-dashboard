apiVersion: batch/v1
kind: Job
metadata:
  name: kubernetes-grafana-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      serviceAccountName: kubernetes-grafana-dashboard
      initContainers:
      - name: create-dashboard
        image: {{ .Values.grafanalib.image }}:{{ .Values.grafanalib.tag }}
        command: ['find', '/dashboards-source', '-name', '*.py', '-type', 'f', '-exec', 'sh', '-c', 'generate-dashboard -o "/dashboards/$(basename $0 .py).json" {}', '{}', ';']
        env:
        - name: DASHBOARD_DATASOURCE
          value: {{ .Values.dashboard.datasource }}
        - name: DASHBOARD_TITLE
          value: {{ .Values.dashboard.title }}
        volumeMounts:
        - name: dashboard-volume
          mountPath: /dashboards
        - name: dashboard-source
          mountPath: /dashboards-source
      - name: configmap-dashboard
        image:  {{ .Values.kubectl.image }}:{{ .Values.kubectl.tag }}
        command: ['find', '/dashboards', '-name', '*.json', '-type', 'f', '-exec', 'sh', '-c', 'kubectl create configmap "dashboard-$(basename $0 .json)" --from-file {}', '{}', ';']
        volumeMounts:
        - name: dashboard-volume
          mountPath: /dashboards
      containers:
      - name: label-dashboard
        image: {{ .Values.kubectl.image }}:{{ .Values.kubectl.tag }}
        command: ['find', '/dashboards', '-name', '*.json', '-type', 'f', '-exec', 'sh', '-c', 'kubectl label configmap "dashboard-$(basename $0 .json)" {{ .Values.dashboard.label}}=1', '{}', ';']
        volumeMounts:
        - name: dashboard-volume
          mountPath: /dashboards
      - name: debug
        image: busybox
        command: ['sleep', '10000']
        volumeMounts:
        - name: dashboard-volume
          mountPath: /dashboards
      restartPolicy: Never
      volumes:
      - name: dashboard-volume
        emptyDir: {}
      - name: dashboard-source
        configMap:
          name: dashboard-source
